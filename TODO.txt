Features
========
-Custom workspace names

-Activate containers when clicking their frame

-Cycle through tabbed split with mouse wheel while hovering frame

-Proper monitor frame functionality
    -Correct sizing and alignment using parent width
    -Taskbar icon popup

-Theme options for GUI colours, fonts

-GUI-driven include / exclude configuration

-Wrap focus around monitors when navigating

-Built-in dmenu-like functionality

-Plaintext configuration file support

-Github-driven auto update using URlDownloadToFile and https://github.com/:owner/:repo/zipball/:branch

-Placeholder GUI windows
    -Take WinTitle as a member variable, wait for it and convert into window container using hwnd

-Layout save/restore

-Floating window move/resize hotkeys

-Vim-like marks

-Window position/size interpolation option
    -Lerp window into work area

-Window throw gesture
    -Derive velocity from mouse position over time and add offset to window position on drag release

Fixes
=====
-Fix workspace ordering
    -Use workspace index as actual index, insert at appropriate position
    -Use separate display name for top bar readout

-Fix frames not hiding properly on workspace switch

-Fix incorrect creation of splits when moving containers

-Fix window hiding conflicts (ex. steam, deluge, file explorer progress dialogs)
    -Show/hide windows on workspace/fullscreen/tab switch instead of every frame
        -Should allow containers to store their visibility state explicitly rather than implicitly
    -Need to remove/disable window containers
        -Is it better to destroy containers or exclude them from the tree during iteration?

-Fix broken behaviour when moving current fullscreen window to a different workspace

-Check window for min/max size in WindowContainer, center in work area rather than aligning top-left
    -Should allow for nicer management of fixed-size windows like the UE4 splash
        
-Revisit undocking / implicit split behaviour (ex. 2V containing a 2H and 1W, try to move child of 2H upward, doesn't turn 2V into a 3V)

-More robust monitor-to-monitor navigation
    -Need a solution that doesn't assume monitors are laid out in a linear fashion
    -Remove root container split, offload navigation logic to root

-Fix floating windows not responding to moving via keyboard

-Fix certain windows causing windows key to fall through and activate the start menu
    -Reproducible with RemotePC client window
    -Seems to be down to the way RemotePC hooks the windows key

-Fix README.md formatting